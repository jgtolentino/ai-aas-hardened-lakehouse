name: Scout Schema Auto-Sync

on:
  # Run daily at 2 AM UTC
  schedule:
    - cron: '0 2 * * *'
  
  # Run when scout-databank submodule is updated
  push:
    paths:
      - 'platform/scout/scout-databank'
      - '.gitmodules'
  
  # Manual trigger
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run mode (no commits)'
        required: false
        default: 'false'
        type: boolean

jobs:
  sync-scout-schema:
    name: Sync Scout Schema Migrations
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update submodules
        run: |
          git submodule update --init --recursive
          git submodule foreach git fetch origin
          git submodule foreach git checkout main
          git submodule foreach git pull origin main

      - name: Run Scout schema sync
        id: sync
        env:
          CI: true
          DRY_RUN: ${{ github.event.inputs.dry_run || 'false' }}
        run: |
          echo "Starting Scout schema sync..."
          chmod +x ./scripts/sync-scout-schema.sh
          
          # Capture output
          SYNC_OUTPUT=$(./scripts/sync-scout-schema.sh 2>&1 || true)
          echo "$SYNC_OUTPUT"
          
          # Extract statistics
          SYNCED_COUNT=$(echo "$SYNC_OUTPUT" | grep -oP 'Files synced: \K\d+' || echo "0")
          echo "synced_count=$SYNCED_COUNT" >> $GITHUB_OUTPUT
          
          # Check if changes were made
          if [ "$SYNCED_COUNT" -gt 0 ]; then
            echo "changes_made=true" >> $GITHUB_OUTPUT
          else
            echo "changes_made=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.sync.outputs.changes_made == 'true' && github.event.inputs.dry_run != 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            chore: sync Scout schema migrations
            
            Auto-synced ${{ steps.sync.outputs.synced_count }} migration files from scout-databank submodule
          branch: scout-schema-sync/${{ github.run_number }}
          delete-branch: true
          title: '[Auto] Sync Scout Schema Migrations'
          body: |
            ## Scout Schema Migration Sync
            
            This PR automatically syncs Scout-related migrations from the `scout-databank` submodule.
            
            ### Changes
            - **Files synced**: ${{ steps.sync.outputs.synced_count }}
            - **Sync timestamp**: ${{ github.event.repository.updated_at }}
            - **Workflow run**: [${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ### Included Migration Patterns
            - `scout_*.sql`
            - `*scout*.sql`
            - `*sari_sari*.sql`
            - `*dal_*.sql`
            - `*isko*.sql`
            - `*agentic*.sql`
            - `*products*.sql`
            - `*brands*.sql`
            - `*silver*.sql`
            - `*gold*.sql`
            - `*platinum*.sql`
            
            ### Review Checklist
            - [ ] Migration files are Scout-related only
            - [ ] No breaking changes to existing schemas
            - [ ] Migrations follow naming conventions
            - [ ] Dependencies are properly ordered
            
            ---
            *This PR was automatically generated by the Scout Schema Sync workflow.*
          labels: |
            automated
            scout-schema
            migrations
            dependencies
          assignees: jgtolentino

      - name: Notify on Slack (if configured)
        if: steps.sync.outputs.changes_made == 'true' && github.event.inputs.dry_run != 'true'
        continue-on-error: true
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ -n "$SLACK_WEBHOOK_URL" ]; then
            curl -X POST $SLACK_WEBHOOK_URL \
              -H 'Content-type: application/json' \
              --data "{
                \"text\": \"Scout Schema Sync completed\",
                \"blocks\": [{
                  \"type\": \"section\",
                  \"text\": {
                    \"type\": \"mrkdwn\",
                    \"text\": \"*Scout Schema Sync Completed*\n• Files synced: ${{ steps.sync.outputs.synced_count }}\n• <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View workflow run>\"
                  }
                }]
              }"
          fi

      - name: Summary
        run: |
          echo "## Scout Schema Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ steps.sync.outputs.changes_made == 'true' && 'Changes detected' || 'No changes' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Files synced**: ${{ steps.sync.outputs.synced_count }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Dry run**: ${{ github.event.inputs.dry_run || 'false' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY