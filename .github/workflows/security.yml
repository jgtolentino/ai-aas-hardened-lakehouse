name: security

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'platform/**'
      - '**/*.ts'
      - '**/*.tsx'
      - '**/*.js'
      - '**/*.go'
      - 'Dockerfile'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - '.github/workflows/security.yml'
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'platform/**'
      - '**/*.ts'
      - '**/*.tsx'
      - '**/*.js'
      - '**/*.go'
      - 'Dockerfile'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - '.github/workflows/security.yml'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: security-${{ github.ref }}
  cancel-in-progress: true

jobs:
  semgrep:
    if: ${{ !github.event.pull_request.head.repo.fork }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Install Semgrep (pinned)
        run: |
          set -euo pipefail
          python3 -m pip install --upgrade pip pipx
          pipx install "semgrep==1.79.0"
          semgrep --version

      - name: Semgrep CI (headless)
        id: semgrep
        run: |
          set -euo pipefail
          semgrep ci --config p/ci --timeout 300 --json --output semgrep.json || status=$?
          echo "status=${status:-0}" >> "$GITHUB_OUTPUT"
          echo "## Semgrep Summary" >> "$GITHUB_STEP_SUMMARY"
          jq -r '
            .results
            | group_by(.extra.severity)
            | map({sev:.[0].extra.severity, count:length})
            | (["Severity","Findings"], (.[]|[.sev, (.count|tostring)])) 
            | @tsv
          ' semgrep.json | column -t >> "$GITHUB_STEP_SUMMARY"

      - name: Gate on HIGH/CRITICAL
        run: |
          # Fail if any HIGH/CRITICAL (or ERROR) findings exist
          jq -e '
            (.results // [])
            | map(select((.extra.severity|ascii_upcase) as $s | ($s=="HIGH" or $s=="CRITICAL" or $s=="ERROR")))
            | length == 0
          ' semgrep.json

      - name: Upload Semgrep report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: semgrep.json
          retention-days: 7

  trivy:
    if: ${{ !github.event.pull_request.head.repo.fork }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Install Trivy (apt repo, pinned major)
        run: |
          set -euo pipefail
          sudo apt-get update -y
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release jq
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install -y trivy
          trivy --version

      - name: Trivy FS scan (HIGH,CRITICAL)
        run: |
          trivy fs \
            --severity HIGH,CRITICAL \
            --exit-code 1 \
            --no-progress \
            --timeout 5m \
            --format json \
            --output trivy.json \
            .

      - name: Upload Trivy report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy.json
          retention-days: 7