#!/usr/bin/env bash
set -euo pipefail

ROOT="/Users/tbwa/ai-aas-hardened-lakehouse"
cd "$ROOT"

echo "== ENV SNAPSHOT =="
echo "BRUNO_PROFILE=${BRUNO_PROFILE:-default}"
echo "NODE_ENV=${NODE_ENV:-dev}"

echo "== CHECK LOCAL ENV FILES (not printing values) =="
for f in .env .env.local apps/scout-dashboard/.env.local; do
  [[ -f "$f" ]] && echo "found: $f" || true
done

echo "== EXPECTED SECRET KEYS (Bruno/vault-backed) =="
REQ_KEYS=(
  "GITHUB_TOKEN"
  "GITHUB_APP_ID" "GITHUB_INSTALLATION_ID" "GITHUB_PRIVATE_KEY_PEM"   # if using GH App
  "SUPABASE_URL" "SUPABASE_ANON_KEY" "SUPABASE_SERVICE_ROLE_KEY"
  "MCP_SUPABASE_URL" "MCP_SUPABASE_KEY"                                # key Claude MCP will use (never anon if it writes)
)
printf '%s\n' "${REQ_KEYS[@]}"

echo "== BRUNO PRESENCE CHECK =="
missing=()
for k in "${REQ_KEYS[@]}"; do
  if ! :bruno env:get "$k" >/dev/null 2>&1; then
    echo "MISSING in Bruno: $k"; missing+=("$k")
  else
    echo "OK in Bruno: $k"
  fi
done

if ((${#missing[@]})); then
  echo ">> Missing in Bruno vault: ${missing[*]}"
  echo "   Use the :bruno set block below to populate."
fi

echo "== RUNTIME ENV PRESENCE (current shell) =="
present=0; absent=0
for k in "${REQ_KEYS[@]}"; do
  if [[ -n "${!k-}" ]]; then echo "exported: $k"; ((present++)); else echo "absent:   $k"; ((absent++)); fi
done
echo "Summary -> exported:$present absent:$absent"

echo "== DRY-RUN: Claude Desktop MCP config existence =="
MCP_CFG="$HOME/Library/Application Support/Claude/mcp/settings.json"
if [[ -f "$MCP_CFG" ]]; then
  echo "Claude MCP settings found: $MCP_CFG"
else
  echo "Claude MCP settings NOT found at: $MCP_CFG"
fi

echo "== NEXT =="
echo "1) If Bruno is missing keys, run the :bruno block."
echo "2) Then run the fix-injection script below."
echo "3) Finally run live API verifiers."
