# Production Secrets Template
# Copy to secrets.yaml and fill in values
# NEVER commit secrets.yaml to version control
# Use a proper secrets management solution (Vault, AWS Secrets Manager, etc.)

database:
  # Production PostgreSQL (via connection pooler)
  host: db.production.supabase.co
  port: 6543  # PgBouncer port
  database: postgres
  username: ${DB_USER}  # From vault
  password: ${DB_PASSWORD}  # From vault
  schema: scout
  ssl:
    enabled: true
    mode: require
    ca_cert: ${DB_CA_CERT}  # From vault
  pool:
    size: 20
    max: 100
    timeout: 30

supabase:
  # Production Supabase project
  project_ref: production-project
  url: https://production-project.supabase.co
  anon_key: ${SUPABASE_ANON_KEY}  # From vault
  service_role_key: ${SUPABASE_SERVICE_ROLE_KEY}  # From vault
  jwt_secret: ${SUPABASE_JWT_SECRET}  # From vault

superset:
  # Production Superset
  base_url: https://superset.example.com
  admin_username: ${SUPERSET_ADMIN_USER}  # From vault
  admin_password: ${SUPERSET_ADMIN_PASSWORD}  # From vault
  secret_key: ${SUPERSET_SECRET_KEY}  # From vault
  
  # Database for Superset metadata
  metadata_db:
    host: superset-db.production.aws.rds.amazonaws.com
    port: 5432
    database: superset
    username: ${SUPERSET_DB_USER}  # From vault
    password: ${SUPERSET_DB_PASSWORD}  # From vault
    ssl: true

external_services:
  # API Keys (all from vault)
  openai_api_key: ${OPENAI_API_KEY}
  openai_org_id: ${OPENAI_ORG_ID}
  mapbox_token: ${MAPBOX_TOKEN}
  
  # Monitoring
  sentry_dsn: ${SENTRY_DSN_PROD}
  datadog_api_key: ${DATADOG_API_KEY}
  datadog_app_key: ${DATADOG_APP_KEY}
  new_relic_license_key: ${NEW_RELIC_LICENSE_KEY}
  
  # Notifications
  slack_webhook_url: ${SLACK_WEBHOOK_PROD}
  pagerduty_integration_key: ${PAGERDUTY_KEY_PROD}
  ops_genie_api_key: ${OPS_GENIE_KEY}

auth:
  # JWT settings (RSA)
  jwt_algorithm: RS256
  jwt_public_key: ${JWT_PUBLIC_KEY}  # From vault
  jwt_private_key: ${JWT_PRIVATE_KEY}  # From vault
  jwt_expiry: 1800  # 30 minutes
  jwt_refresh_expiry: 86400  # 1 day
  
  # OAuth/SAML
  oauth_client_id: ${OAUTH_CLIENT_ID}
  oauth_client_secret: ${OAUTH_CLIENT_SECRET}
  saml_idp_cert: ${SAML_IDP_CERT}
  saml_sp_cert: ${SAML_SP_CERT}
  saml_sp_key: ${SAML_SP_KEY}

smtp:
  # Email configuration
  host: smtp.sendgrid.net
  port: 587
  username: apikey
  password: ${SENDGRID_API_KEY}  # From vault
  from_address: noreply@example.com
  reply_to: support@example.com

backup:
  # Backup configuration
  s3_bucket: scout-backups-prod
  s3_region: us-east-1
  aws_access_key_id: ${BACKUP_AWS_ACCESS_KEY}  # From vault
  aws_secret_access_key: ${BACKUP_AWS_SECRET_KEY}  # From vault
  encryption_key: ${BACKUP_ENCRYPTION_KEY}  # From vault

compliance:
  # Compliance and audit
  audit_log_bucket: scout-audit-logs-prod
  audit_log_kms_key: ${AUDIT_KMS_KEY}  # From vault
  data_retention_bucket: scout-data-retention-prod
  
# Production-specific settings
high_availability:
  enable_multi_region: true
  primary_region: us-east-1
  standby_regions: ["us-west-2", "eu-west-1"]
  
security:
  enable_waf: true
  enable_shield: true
  enable_guardduty: true
  ip_whitelist: ${PRODUCTION_IP_WHITELIST}  # From vault