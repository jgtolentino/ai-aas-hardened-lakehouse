{
  "name": "Figma GitHub Sync Bot (MCP Routing)",
  "description": "Export Figma designs via Claude Desktop MCP and sync them to GitHub repositories through secure MCP routing",
  "instructions": "You are a specialized bot that helps sync Figma design files to GitHub repositories using Model Context Protocol (MCP) routing. You route through Claude Desktop's existing Figma and GitHub MCPs, so no API tokens are needed. You work best when users have active Figma Dev Mode selections. You can export entire files, current selections, or specific nodes and commit them automatically. Handle MCP routing errors gracefully and provide clear status updates.",
  "conversation_starters": [
    "Sync my current Figma selection to GitHub",
    "Export my Figma file to GitHub",
    "Set up automated design sync workflow",
    "Explain MCP routing approach"
  ],
  "capabilities": {
    "web_browsing": false,
    "dalle_image_generation": false,
    "code_interpreter": false
  },
  "actions": [
    {
      "name": "syncFigmaSelectionToGitHub",
      "description": "Export current Figma selection (Dev Mode) and sync to GitHub via MCP routing",
      "method": "POST",
      "url": "https://your-mcp-hub-domain.com/mcp/run",
      "headers": {
        "X-API-Key": "{{api_key}}",
        "Content-Type": "application/json"
      },
      "body": {
        "server": "sync",
        "tool": "sync.figmaSelectionToRepo",
        "args": {
          "commitPath": "{{commitPath}}",
          "message": "{{message}}"
        }
      },
      "parameters": [
        {
          "name": "commitPath",
          "type": "string",
          "description": "Path in the repository where to save the selection",
          "required": false,
          "default": "design/figma/selection.json"
        },
        {
          "name": "message",
          "type": "string",
          "description": "Git commit message",
          "required": false,
          "default": "chore(figma): sync selection from Dev Mode"
        }
      ]
    },
    {
      "name": "syncFigmaFileToGitHub",
      "description": "Export a complete Figma file and sync it to GitHub via MCP routing",
      "method": "POST",
      "url": "https://your-mcp-hub-domain.com/mcp/run",
      "headers": {
        "X-API-Key": "{{api_key}}",
        "Content-Type": "application/json"
      },
      "body": {
        "server": "sync",
        "tool": "sync.figmaFileToRepo", 
        "args": {
          "fileKey": "{{fileKey}}",
          "commitPath": "{{commitPath}}",
          "message": "{{message}}"
        }
      },
      "parameters": [
        {
          "name": "fileKey",
          "type": "string",
          "description": "The Figma file key from the URL (when not using current selection)",
          "required": true
        },
        {
          "name": "commitPath", 
          "type": "string",
          "description": "Path in the repository where to save the file",
          "required": false,
          "default": "design/figma/export.json"
        },
        {
          "name": "message",
          "type": "string", 
          "description": "Git commit message",
          "required": false,
          "default": "chore(figma): sync complete file via MCP"
        }
      ]
    },
    {
      "name": "exportFigmaFile",
      "description": "Export a Figma file as JSON without committing",
      "method": "POST",
      "url": "https://your-mcp-hub-domain.com/mcp/run",
      "headers": {
        "X-API-Key": "{{api_key}}",
        "Content-Type": "application/json"
      },
      "body": {
        "server": "figma",
        "tool": "file.exportJSON",
        "args": {
          "fileKey": "{{fileKey}}"
        }
      },
      "parameters": [
        {
          "name": "fileKey",
          "type": "string",
          "description": "The Figma file key from the URL", 
          "required": true
        }
      ]
    },
    {
      "name": "exportFigmaNodes",
      "description": "Export specific Figma nodes/frames",
      "method": "POST", 
      "url": "https://your-mcp-hub-domain.com/mcp/run",
      "headers": {
        "X-API-Key": "{{api_key}}",
        "Content-Type": "application/json"
      },
      "body": {
        "server": "figma",
        "tool": "nodes.get",
        "args": {
          "fileKey": "{{fileKey}}",
          "ids": "{{nodeIds}}"
        }
      },
      "parameters": [
        {
          "name": "fileKey",
          "type": "string",
          "description": "The Figma file key from the URL",
          "required": true
        },
        {
          "name": "nodeIds",
          "type": "array",
          "description": "Array of node IDs to export",
          "required": true
        }
      ]
    },
    {
      "name": "exportFigmaImages",
      "description": "Export Figma frames as images",
      "method": "POST",
      "url": "https://your-mcp-hub-domain.com/mcp/run", 
      "headers": {
        "X-API-Key": "{{api_key}}",
        "Content-Type": "application/json"
      },
      "body": {
        "server": "figma",
        "tool": "images.export",
        "args": {
          "fileKey": "{{fileKey}}",
          "ids": "{{nodeIds}}",
          "format": "{{format}}",
          "scale": "{{scale}}"
        }
      },
      "parameters": [
        {
          "name": "fileKey",
          "type": "string",
          "description": "The Figma file key from the URL",
          "required": true
        },
        {
          "name": "nodeIds",
          "type": "array", 
          "description": "Array of node IDs to export as images",
          "required": true
        },
        {
          "name": "format",
          "type": "string",
          "description": "Image format (png or jpg)",
          "required": false,
          "default": "png"
        },
        {
          "name": "scale",
          "type": "string",
          "description": "Image scale (1, 2, 3, 4)",
          "required": false,
          "default": "2"
        }
      ]
    },
    {
      "name": "commitToGitHub",
      "description": "Commit content to GitHub repository",
      "method": "POST",
      "url": "https://your-mcp-hub-domain.com/mcp/run",
      "headers": {
        "X-API-Key": "{{api_key}}",
        "Content-Type": "application/json"
      },
      "body": {
        "server": "github",
        "tool": "repo.commitFile",
        "args": {
          "path": "{{path}}",
          "content": "{{content}}",
          "message": "{{message}}",
          "branch": "{{branch}}"
        }
      },
      "parameters": [
        {
          "name": "path",
          "type": "string", 
          "description": "File path in the repository",
          "required": true
        },
        {
          "name": "content",
          "type": "string",
          "description": "File content to commit",
          "required": true
        },
        {
          "name": "message",
          "type": "string",
          "description": "Git commit message", 
          "required": true
        },
        {
          "name": "branch",
          "type": "string",
          "description": "Git branch name",
          "required": false,
          "default": "chore/figma-sync"
        }
      ]
    }
  ],
  "authentication": {
    "type": "api_key",
    "api_key": "your-mcp-hub-api-key"
  },
  "privacy_policy": "https://your-domain.com/privacy",
  "openapi_spec": {
    "openapi": "3.0.0",
    "info": {
      "title": "Figma GitHub Sync API",
      "version": "1.0.0",
      "description": "API for syncing Figma designs to GitHub repositories"
    },
    "servers": [
      {
        "url": "https://your-mcp-hub-domain.com"
      }
    ],
    "paths": {
      "/mcp/run": {
        "post": {
          "summary": "Execute MCP tool",
          "description": "Execute a tool on the specified MCP server",
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "server": {
                      "type": "string",
                      "enum": ["figma", "github", "sync", "supabase", "mapbox"],
                      "description": "MCP server to route to (figma/github route to Claude Desktop MCPs)"
                    },
                    "tool": {
                      "type": "string", 
                      "description": "Tool to execute on the server"
                    },
                    "args": {
                      "type": "object",
                      "description": "Arguments to pass to the tool"
                    }
                  },
                  "required": ["server", "tool", "args"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "Tool execution result"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"  
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "ApiKeyAuth": {
          "type": "apiKey",
          "in": "header",
          "name": "X-API-Key"
        }
      }
    }
  }
}