apiVersion: v1
kind: Service
metadata: { name: nessie, namespace: aaas, labels: { app: nessie } }
spec:
  selector: { app: nessie }
  ports: [ { name: http, port: 19120, targetPort: 19120 } ]
---
apiVersion: apps/v1
kind: Deployment
metadata: { name: nessie, namespace: aaas }
spec:
  replicas: 1
  selector: { matchLabels: { app: nessie } }
  template:
    metadata: { labels: { app: nessie } }
    spec:
      containers:
        - name: nessie
          image: ghcr.io/projectnessie/nessie:0.99.0
          ports: [ { containerPort: 19120, name: http } ]
          resources:
            requests: { cpu: "100m", memory: "256Mi" }
            limits:   { cpu: "500m", memory: "512Mi" }
          livenessProbe:
            httpGet: { path: /api/v2/config/info, port: 19120 }
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet: { path: /api/v2/config/info, port: 19120 }
            initialDelaySeconds: 15
            periodSeconds: 5
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata: { name: nessie-allow-trino, namespace: aaas }
spec:
  podSelector: { matchLabels: { app: nessie } }
  ingress:
    - from:
        - podSelector: { matchLabels: { app: trino } }
      ports: [ { port: 19120 } ]
