apiVersion: v1
kind: ConfigMap
metadata:
  name: secret-rotation-script
  namespace: scout-system
data:
  rotate-secrets.sh: |
    #!/bin/bash
    set -euo pipefail
    
    # Rotate database passwords
    echo "Rotating database passwords..."
    NEW_DB_PASS=$(openssl rand -base64 32)
    
    # Update Kubernetes secret
    kubectl create secret generic postgres-credentials \
      --from-literal=password="${NEW_DB_PASS}" \
      --dry-run=client -o yaml | kubectl apply -f -
    
    # Rotate JWT secrets
    echo "Rotating JWT secrets..."
    NEW_JWT_SECRET=$(openssl rand -base64 64)
    
    kubectl create secret generic supabase-jwt \
      --from-literal=secret="${NEW_JWT_SECRET}" \
      --dry-run=client -o yaml | kubectl apply -f -
    
    # Rotate API keys
    echo "Rotating API keys..."
    NEW_ANON_KEY=$(openssl rand -base64 32)
    NEW_SERVICE_KEY=$(openssl rand -base64 32)
    
    kubectl create secret generic supabase-keys \
      --from-literal=anon="${NEW_ANON_KEY}" \
      --from-literal=service="${NEW_SERVICE_KEY}" \
      --dry-run=client -o yaml | kubectl apply -f -
    
    # Restart deployments to pick up new secrets
    kubectl rollout restart deployment -n scout-system
    
    echo "Secret rotation completed successfully"

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: secret-rotation
  namespace: scout-system
spec:
  schedule: "0 2 * * 0"  # Weekly at 2 AM on Sunday
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: secret-rotation
        spec:
          serviceAccountName: secret-rotator
          containers:
          - name: rotator
            image: bitnami/kubectl:latest
            command: ["/bin/bash"]
            args: ["/scripts/rotate-secrets.sh"]
            volumeMounts:
            - name: script
              mountPath: /scripts
            env:
            - name: NAMESPACE
              value: scout-system
          volumes:
          - name: script
            configMap:
              name: secret-rotation-script
              defaultMode: 0755
          restartPolicy: OnFailure

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-rotator
  namespace: scout-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-rotator
  namespace: scout-system
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "create", "update", "patch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-rotator
  namespace: scout-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: secret-rotator
subjects:
- kind: ServiceAccount
  name: secret-rotator
  namespace: scout-system