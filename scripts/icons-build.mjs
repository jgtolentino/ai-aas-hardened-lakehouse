#!/usr/bin/env node
import fs from 'fs'; 
import path from 'path';
import { optimize } from 'svgo';
import { transform } from '@svgr/core';
import SVGSprite from 'svg-sprite';

const ROOT = process.cwd();
const SRC = path.join(ROOT, 'assets/icons/src');
const RAW_OUT = path.join(ROOT, 'docs-site/static/icons');
const TSX_OUT = path.join(ROOT, 'docs-site/src/components/icons');
const MDX_DIR = path.join(ROOT, 'docs-site/docs/reference/icons');
fs.mkdirSync(RAW_OUT, {recursive:true});
fs.mkdirSync(TSX_OUT, {recursive:true});
fs.mkdirSync(MDX_DIR, {recursive:true});

const files = fs.existsSync(SRC) ? fs.readdirSync(SRC).filter(f=>f.endsWith('.svg')) : [];
const exports = [];

function pascal(s){ return s.replace(/(^\w|[-_]\w)/g, m=>m.replace(/[-_]/,'').toUpperCase()); }

for (const f of files) {
  const name = f.replace(/\.svg$/,'');
  const svg = fs.readFileSync(path.join(SRC,f),'utf8');
  const { data } = optimize(svg, { multipass:true });
  fs.writeFileSync(path.join(RAW_OUT, f), data, 'utf8');

  const compName = pascal(name);
  const tsx = await transform(data, { typescript:true, jsxRuntime:'automatic', icon:true }, { componentName: compName });
  fs.writeFileSync(path.join(TSX_OUT, `${compName}.tsx`), tsx, 'utf8');
  exports.push(`export { default as ${compName} } from './${compName}';`);
}

// index.ts barrel
fs.writeFileSync(path.join(TSX_OUT, 'index.ts'), exports.join('\n') + '\n', 'utf8');

// build sprite
if (files.length) {
  const spriter = new SVGSprite({ mode:{ symbol:{ sprite:'sprite.svg' } }});
  for (const f of files) spriter.add(path.join(RAW_OUT,f), f, fs.readFileSync(path.join(RAW_OUT,f)));
  spriter.compile((err, result) => {
    if (err) throw err;
    const out = result.symbol.sprite.contents;
    fs.mkdirSync(path.join(RAW_OUT,'sprite'), {recursive:true});
    fs.writeFileSync(path.join(RAW_OUT,'sprite','sprite.svg'), out);
  });
}

// MDX gallery
const gallery =
`---
id: icon-gallery
title: Icon Gallery
sidebar_label: Icons
description: Autogenerated icon gallery
tags: [icons, svg, svgr]
---

import * as Icons from '@site/src/components/icons';

> Optimized SVGs live in \`/icons\`. Use TSX components or the sprite.

## React components
\`\`\`tsx
import { /* IconName */ } from '@site/src/components/icons';
\`\`\`

${files.map(f=>{
  const n=f.replace('.svg',''); const comp = pascal(n);
  return `### ${comp}\n<Icons.${comp} />\n\n\`<Icons.${comp} />\`\n`;
}).join('\n')}
`;
fs.writeFileSync(path.join(MDX_DIR,'IconGallery.mdx'), gallery, 'utf8');
console.log(`[icons] ${files.length} icons processed.`);